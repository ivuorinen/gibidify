---
# golangci-lint configuration for gibidify project
# Version: 2.2.2 (golangci-lint v2)
# Go Version: 1.24

version: "2"

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  build-tags: []
  modules-download-mode: readonly
  allow-parallel-runners: false
  go: "1.24"
  concurrency: 0

output:
  formats:
    text:
      path: stdout
      colors: true
      print-linter-name: true
      print-issued-lines: true
  show-stats: true
  sort-order:
    - linter
    - file

linters:
  default: none
  enable:
    # The main linter
    - revive # Collection of great linting rules

    # Essential error detection
    - errcheck # Check for unchecked errors
    - govet # Go vet examinations
    - ineffassign # Detect ineffectual assignments
    - staticcheck # Advanced static analysis (includes gosimple, stylecheck)
    - unused # Find unused code

    # Bug prevention
    - bodyclose # Check HTTP response body closure
    - dupl # Detect code duplication
    - gochecknoinits # Check for init functions
    - goconst # Find repeated strings for constants
    - gocritic # Comprehensive Go source code linter
    - gosec # Security issues
    - misspell # Find misspelled words
    - unparam # Find unused function parameters
    - usestdlibvars # Use standard lib vars

    # Performance
    - prealloc # Find slice allocations that could be pre-allocated
    - perfsprint # Performance optimizations for fmt.Sprint family

    # Code complexity
    - gocognit # Cognitive complexity
    - gocyclo # Cyclomatic complexity
    - nestif # Nested if statements

    # Testing
    # - tparallel # Test parallelization issues
    - thelper # Add t.Helper() to helper methods
    # - paralleltest # Detect missing t.Parallel()
    # - usetesting # Use testing package methods for testing

    # Error handling
    - errorlint # Error handling best practices
    - wrapcheck # Check error wrapping

    # Naming conventions
    - predeclared # Shadowing of predeclared identifiers
    - varnamelen # Variable name length

    # Import management
    - depguard # Dependency management
    - importas # Import aliasing

    # Format
    - nlreturn # Add new line before return statement
    - lll # Line length limit
    - godot # Add dot to comment header
    - tagalign # Tag alignment
    - whitespace # Whitespace rules

  settings:
    errcheck:
      check-type-assertions: true
      check-blank: true
      disable-default-exclusions: false
      exclude-functions:
        - fmt.Fprintf
        - fmt.Fprintln
        - fmt.Printf
        - fmt.Println
        - fmt.Fprint
        - (*github.com/schollz/progressbar/v3.ProgressBar).Add
        - (*github.com/schollz/progressbar/v3.ProgressBar).Finish
        - (*github.com/fatih/color.Color).Fprintf

    govet:
      enable:
        - atomic
        - bools
        - composites
        - copylocks
        - errorsas
        - httpresponse
        - loopclosure
        - lostcancel
        - nilfunc
        - printf
        - shift
        - stdmethods
        - structtag
        - unmarshal
        - unreachable
        - unusedresult

    staticcheck:
      checks: ["all"]

    unused:
      parameters-are-used: true

    dupl:
      threshold: 150

    goconst:
      min-len: 3
      min-occurrences: 3

    gosec:
      excludes:
        - G204 # Subprocess launching with variable
        - G304 # File path provided as taint input

    misspell:
      locale: US
      ignore-rules:
        - tmux

    gocognit:
      min-complexity: 15

    gocyclo:
      min-complexity: 15

    nestif:
      min-complexity: 5

    varnamelen:
      max-distance: 10
      min-name-length: 3
      check-receiver: false
      check-return: false
      # ignore-type-assert-ok: true
      ignore-map-index-ok: true
      ignore-chan-recv-ok: true
      ignore-names:
        - b
        - err
        - fp
        - i
        - id
        - j
        - k
        - m
        - mu
        - ok
        - r
        - rm
        - t
        - tm
        - ui
        - v
        - w
        - wg

    depguard:
      rules:
        main:
          files:
            - $all
          allow:
            - $gostd
            - github.com/ivuorinen/gibidify
            - github.com/spf13/cobra
            - github.com/spf13/viper
            - github.com/fatih/color
            - github.com/sabhiram/go-gitignore
            - github.com/schollz/progressbar/v3
            - github.com/sirupsen/logrus
            - golang.org/x/text
            - gopkg.in/yaml.v3
          deny:
            - pkg: "io/ioutil"
              desc: "Use os and io packages instead"
            - pkg: "github.com/pkg/errors"
              desc: "Use standard errors package with fmt.Errorf for error wrapping"
            - pkg: "github.com/golang/protobuf"
              desc: "Use google.golang.org/protobuf instead"

    errorlint:
      errorf: true
      asserts: true
      comparison: true

    lll:
      line-length: 120

  exclusions:
    rules:
      # Exclude var-naming rule
      - path: \.go
        text: "var-naming: avoid meaningless package names"

      # Exclude main function from some checks
      - path: main\.go
        linters:
          - gochecknoinits

      # Allow longer variable names in test files
      - path: _test\.go
        text: "variable name"
        linters:
          - varnamelen

      # Allow init functions in config package
      - path: internal/config/
        linters:
          - gochecknoinits

formatters:
  enable:
    - gofmt # Format code
    - goimports # Manage imports

  settings:
    gofmt:
      simplify: true
      rewrite-rules:
        - pattern: "interface{}"
          replacement: "any"

    goimports:
      local-prefixes:
        - github.com/ivuorinen/gibidify

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  fix: true

severity:
  default: error
